--// MADE BY "FEDERAL.WTF", ONLY A REUPLOAD FOR EASY USE

                                                                                 local o="unpack";     
                                                                        local a="ldexp";local t="rep";local e="byte";   
                                                                    local StrToNumber=tonumber;local Byte=string[e];local Char=   
                                                                string['char'];local Sub=string['sub'];local Subg=string['gsub'];local  
                                                            Rep=string[t];local Concat=table['concat'];local Insert=table['insert'];local 
                                                           LDExp=math[a];local GetFEnv=getfenv or function() return _ENV;end ;local         
                                                        Setmetatable=setmetatable;local PCall=pcall;local Select=select;local Unpack=unpack   
                                                      or table[o] ;local ToNumber=tonumber;local function VMCall(ByteString,vmenv,...) local i= 
                                                    5;local DIP=1;local repeatNext;ByteString=Subg(Sub(ByteString,i),"..",function(byte) local n= 
                                                  81;if ((Byte(byte,2)==n) or (4593<=2672)) then local h="";local s=1;repeatNext=StrToNumber(Sub(   
                                                  byte,1,s));return h;else local r=16;local a=Char(StrToNumber(byte,r));if (repeatNext or (1168>3156) 
                                                ) then local d=nil;local b=Rep(a,repeatNext);repeatNext=d;return b;else return a;end end end);local     
                                                function gBit(Bit,Start,End) if End then local c=2;local l=2;local Res=(Bit/(l^(Start-1)))%(c^(((End-1) - 
                                              (Start-1)) + 1)) ;return Res-(Res%1) ;else local u=1;local Plc=2^(Start-u) ;return (((Bit%(Plc + Plc))>=Plc)  
                                              and 1) or 0 ;end end local function gBits8() local m=1;local a=Byte(ByteString,DIP,DIP);DIP=DIP + m ;return a 
                                            ;end local function gBits16() local f=256;local w=2;local a,b=Byte(ByteString,DIP,DIP + w );DIP=DIP + 2 ;return ( 
                                            b * f) + a ;end local function gBits32() local p=256;local y=65536;local g=16777216;local a,b,c,d=Byte(ByteString,  
                                          DIP,DIP + 3 );DIP=DIP + 4 ;return (d * g) + (c * y) + (b * p) + a ;end local function gFloat() local H=52;local T=1;    
                                          local E=1;local z=1;local q=32;local j=31;local x=32;local k=2;local v=20;local b=1;local Left=gBits32();local Right=     
                                          gBits32();local IsNormal=1;local Mantissa=(gBit(Right,b,v) * (k^x)) + Left ;local Exponent=gBit(Right,21,j);local Sign=((   
                                          gBit(Right,q)==z) and  -E) or T ;if ((Exponent==0) or (572>4486)) then local A=0;if (Mantissa==A) then local O=0;return     
                                        Sign * O ;else local I=0;Exponent=1;IsNormal=I;end elseif ((1404==1404) and (Exponent==2047)) then local S=1;local N=0;return ( 
                                        (Mantissa==N) and (Sign * (S/0))) or (Sign * NaN) ;end return LDExp(  --[[==============================]]Sign,Exponent-1023 ) *  
                                        (IsNormal + (Mantissa/(2^H))) ;end local function gString(  --[[============================================]]Len) local C=1;     
                                        local L=1;local Str;if  not Len then local R=0;Len=     --[[======================================================]]gBits32();if (  
                                      Len==R) then local D="";return D;end end Str=Sub(     --[[==========================================================]]ByteString,DIP,(  
                                      DIP + Len) -L );DIP=DIP + Len ;local FStr={};for    --[[==============================================================]]Idx=C, #Str do  
                                      FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end return   --[[================================================================]]Concat(FStr);   
                                      end local gInt=gBits32;local function _R(...) local --[[==================================================================]] U="#";return 
                                       {...},Select(U,...);end local function Deserialize --[[==================================================================]]() local Y=3;     
                                    local W=nil;local M=1;local Instrs={};local Functions --[[====================================================================]]={};local     
                    Lines={};local Chunk={Instrs,Functions,W,Lines};local ConstCount=     --[[====================================================================]]gBits32();local 
               Consts={};for Idx=1,ConstCount do local Type=gBits8();local Cons;if ((Type --[[======================================================================]]==1) or (3748 
            <2212)) then local F=0;Cons=gBits8()~=F ;else local G=2;if (Type==G) then     --[[======================================================================]]Cons=gFloat() 
          ;elseif (Type==3) then Cons=gString();end end Consts[Idx]=Cons;end Chunk[Y]=    --[[======================================================================]]gBits8();for  
        Idx=1,gBits32() do local B=0;local P=1;local Descriptor=gBits8();if (gBit(        --[[======================================================================]]Descriptor,1, 
        P)==B) then local Zg=1;local Zf=3;local Zw=3;local Zc=1;local Zl=2;local Zd=2;    --[[======================================================================]]local Zt=0;   
      local Ze=nil;local Z=4;local Q=3;local J=1;local X=6;local K=4;local V=2;local Type --[[======================================================================]]=gBit(        
      Descriptor,V,3);local Mask=gBit(Descriptor,K,X);local Inst={gBits16(),gBits16(),nil,  --[[==================================================================]]Ze};if ((Type== 
      Zt) or (1180==2180)) then Inst[3]=gBits16();Inst[4]=gBits16();else local Za=1;if (    --[[================================================================]]Type==Za) then    
    Inst[3]=gBits32();else local Zo=2;if ((4090<4653) and (Type==Zo)) then local Zs=16;     --[[==============================================================]]local Zn=2;local  
    Zi=3;Inst[Zi]=gBits32() -(Zn^Zs) ;elseif (Type==3) then local Zh=4;Inst[3]=gBits32() -(2^ --[[==========================================================]]16) ;Inst[Zh]=      
    gBits16();end end end if (gBit(Mask,1,1)==1) then local Zr=2;Inst[Zr]=Consts[Inst[2]];end   --[[====================================================]]if (gBit(Mask,Zd,Zl)==  
    Zc) then local Zm=3;local Zu=3;Inst[Zu]=Consts[Inst[Zm]];end if ((gBit(Mask,Zw,Zf)==Zg) or (  --[[==============================================]]2652<196)) then local Zy= 
    4;Inst[Zy]=Consts[Inst[4]];end Instrs[Idx]=Inst;end end for Idx=1,gBits32() do Functions[Idx-1 ]= --[[====================================]]Deserialize();end return      
    Chunk;end local function Wrap(Chunk,Upvalues,Env) local Zv=3;local Zb=2;local Zp=1;local Instr=Chunk[ --[[========================]]Zp];local Proto=Chunk[Zb];local       
    Params=Chunk[Zv];return function(...) local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local VIP=1;local Top= -1;local Vararg={};local Args={...};   
  local PCount=Select("#",...) -1 ;local Lupvals={};local Stk={};for Idx=0,PCount do if ((4135<4817) and (Idx>=Params)) then Vararg[Idx-Params ]=Args[Idx + 1 ];else      
  local Zk=1;Stk[Idx]=Args[Idx + Zk ];end end local Varargsz=(PCount-Params) + 1 ;local Inst;local Enum;while true do local ZZZZZo=1;Inst=Instr[VIP];Enum=Inst[1];if (  
  Enum<=41) then if ((272==272) and (Enum<=20)) then local Zx=9;if (Enum<=Zx) then if ((100<=3123) and (Enum<=4)) then if ((Enum<=1) or (1369>4987)) then if (Enum==0)    
  then local Zq=3;local Zj=2;local A=Inst[Zj];local Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[Zq])));Top=(Limit + A) -1 ;local Edx=0;for Idx=A,Top do Edx=Edx + 1 ;  
  Stk[Idx]=Results[Edx];end else local Zz=1;local A=Inst[2];Stk[A](Unpack(Stk,A + Zz ,Top));end elseif ((Enum<=2) or (863>=4584)) then local ZE=2;if Stk[Inst[ZE]] then   
  VIP=VIP + 1 ;else VIP=Inst[3];end else local ZT=3;if ((Enum>ZT) or (724>=1668)) then local ZA=3;Stk[Inst[2]]=Stk[Inst[ZA]];else Stk[Inst[2]]=Upvalues[Inst[3]];end end  
  elseif (Enum<=6) then local ZO=5;if (Enum==ZO) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end else local ZR=4;local ZH=0;local ZS=1;local ZN=1;local ZI=2;local A=    
  Inst[ZI];local Results={Stk[A](Stk[A + ZS ])};local Edx=ZH;for Idx=A,Inst[ZR] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end end else local ZD=7;if (Enum<=ZD) then do       
  return;end else local ZL=8;if ((428<1804) and (Enum>ZL)) then local ZC=0;local A=Inst[2];local Results,Limit=_R(Stk[A](Stk[A + 1 ]));Top=(Limit + A) -1 ;local Edx=ZC;  
  for Idx=A,Top do local ZU=1;Edx=Edx + ZU ;Stk[Idx]=Results[Edx];end else local ZM=2;local A=Inst[ZM];do local ZW=1;return Stk[A](Unpack(Stk,A + ZW ,Top));end end end   
  end else local ZF=14;if ((Enum<=ZF) or (3325>4613)) then if ((Enum<=11) or (4950<=4553)) then local ZG=10;if (Enum==ZG) then local ZY=2;local A=Inst[ZY];do return Stk[ 
  A],Stk[A + 1 ];end else local ZB=0;local ZP=2;Stk[Inst[ZP]]=Inst[3]~=ZB ;end elseif (Enum<=12) then local ZX=4;local ZK=1;local ZV=2;local A=Inst[ZV];local B=Stk[Inst[3] 
  ];Stk[A + ZK ]=B;Stk[A]=B[Inst[ZX]];else local ZJ=13;if (Enum>ZJ) then local ZQ=1;local A=Inst[2];local C=Inst[4];local CB=A + 2 ;local Result={Stk[A](Stk[A + ZQ ],Stk[  
  CB])};for Idx=1,C do Stk[CB + Idx ]=Result[Idx];end local R=Result[1];if ((2665<=3933) and R) then local ZZ=3;Stk[CB]=R;VIP=Inst[ZZ];else local ZZe=1;VIP=VIP + ZZe ;end  
  elseif ((3273==3273) and Stk[Inst[2]]) then local ZZt=1;VIP=VIP + ZZt ;else VIP=Inst[3];end end else local ZZa=17;if ((3824>409) and (Enum<=ZZa)) then local ZZo=15;if (( 
  2087==2087) and (Enum<=ZZo)) then local ZZi=2;Stk[Inst[ZZi]]=Stk[Inst[3]];else local ZZn=16;if (Enum==ZZn) then local ZZd=1;local ZZr=2;local ZZh=4;local ZZs=2;local A=  
  Inst[ZZs];local C=Inst[ZZh];local CB=A + ZZr ;local Result={Stk[A](Stk[A + 1 ],Stk[CB])};for Idx=1,C do Stk[CB + Idx ]=Result[Idx];end local R=Result[1];if R then Stk[CB 
  ]=R;VIP=Inst[3];else VIP=VIP + 1 ;end else local ZZl=2;local A=Inst[ZZl];do return Unpack(Stk,A,Top);end end end else local ZZc=18;if (Enum<=ZZc) then VIP=Inst[3];elseif 
   ((Enum>19) or (3404>4503)) then local ZZu=2;local A=Inst[ZZu];Stk[A]=Stk[A](Stk[A + 1 ]);else local ZZm=2;if  not Stk[Inst[ZZm]] then local ZZw=1;VIP=VIP + ZZw ;else    
  local ZZf=3;VIP=Inst[ZZf];end end end end end else local ZZg=30;if (Enum<=ZZg) then if ((Enum<=25) or (3506<=1309)) then local ZZy=22;if ((2955==2955) and (Enum<=ZZy))   
  then local ZZp=21;if ((Enum>ZZp) or (2903==1495)) then local A=Inst[2];Top=(A + Varargsz) -1 ;for Idx=A,Top do local VA=Vararg[Idx-A ];Stk[Idx]=VA;end else local ZZk=2;  
  local ZZv=4;local ZZb=3;local B=Inst[ZZb];local K=Stk[B];for Idx=B + 1 ,Inst[ZZv] do K=K   .. Stk[Idx] ;end Stk[Inst[ZZk]]=K;end else local ZZx=23;if ((4546>=2275) and ( 
  Enum<=ZZx)) then local ZZj=3;Stk[Inst[2]]= not Stk[Inst[ZZj]];else local ZZq=24;if (Enum==ZZq) then local ZZT=0;local ZZE=1;local ZZz=2;local A=Inst[ZZz];local Results,  
  Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -ZZE ;local Edx=ZZT;for Idx=A,Top do local ZZA=1;Edx=Edx + ZZA ;Stk[Idx]=Results[Edx];end else local ZZO=2;  
  local A=Inst[ZZO];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end end end else local ZZI=27;if ((819>=22) and (Enum<=ZZI)) then if (Enum==26) then Stk[Inst[2]]();else    
  local ZZN=3;local A=Inst[2];Stk[A](Unpack(Stk,A + 1 ,Inst[ZZN]));end else local ZZS=28;if ((3162==3162) and (Enum<=ZZS)) then local ZZR=1;local ZZH=2;local A=Inst[ZZH] 
  ;Top=(A + Varargsz) -ZZR ;for Idx=A,Top do local VA=Vararg[Idx-A ];Stk[Idx]=VA;end elseif ((Enum>29) or (2369>4429)) then local ZZD=2;local A=Inst[ZZD];do return Stk[A 
    ](Unpack(Stk,A + 1 ,Top));end else local ZZL=2;Stk[Inst[ZZL]][Inst[3]]=Inst[4];end end end elseif (Enum<=35) then local ZZC=32;if (Enum<=ZZC) then if (Enum==31) then 
     local ZZM=3;local ZZU=2;Stk[Inst[ZZU]]=Stk[Inst[ZZM]] + Stk[Inst[4]] ;else local ZZW=4;Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[ZZW]] ;end else local ZZF=33;if ((4095>=  
    3183) and (Enum<=ZZF)) then local ZZY=3;local ZZG=2;Stk[Inst[ZZG]]=Inst[ZZY];else local ZZP=34;if ((Enum==ZZP) or (3711<1008)) then VIP=Inst[3];else local ZZK=2;     
    local ZZV=1;local ZZB=3;local B=Inst[ZZB];local K=Stk[B];for Idx=B + ZZV ,Inst[4] do K=K   .. Stk[Idx] ;end Stk[Inst[ZZK]]=K;end end end else local ZZX=38;if (Enum<= 
      ZZX) then local ZZJ=36;if ((Enum<=ZZJ) or (1049<=906)) then Stk[Inst[2]][Inst[3]]=Inst[4];else local ZZQ=37;if ((4513>2726) and (Enum==ZZQ)) then local ZZZe=0;   
      local ZZZ=1;local A=Inst[2];local Results={Stk[A](Unpack(Stk,A + 1 ,Top))};local Edx=ZZZe;for Idx=A,Inst[4] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end else Stk[   
      Inst[2]]();end end else local ZZZt=39;if ((Enum<=ZZZt) or (1481>=2658)) then local ZZZo=1;local ZZZa=2;local A=Inst[ZZZa];Stk[A](Stk[A + ZZZo ]);elseif ((Enum==  
        40) or (3220==1364)) then local ZZZi=3;Stk[Inst[2]]=Stk[Inst[ZZZi]][Inst[4]];else local ZZZn=4;Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[ZZZn]] ;end end end end else 
         local ZZZs=62;if (Enum<=ZZZs) then local ZZZh=51;if ((Enum<=ZZZh) or (1054>3392)) then if ((Enum<=46) or (676>=1642)) then local ZZZr=43;if ((4136>2397) and ( 
        Enum<=ZZZr)) then local ZZZd=42;if ((Enum>ZZZd) or (4334==4245)) then local ZZZc=nil;local ZZZl=2;Stk[Inst[ZZZl]]=Wrap(Proto[Inst[3]],ZZZc,Env);else local ZZZm 
          =4;local ZZZu=2;if ((Stk[Inst[ZZZu]]==Inst[ZZZm]) or (4276<=3031)) then VIP=VIP + 1 ;else local ZZZw=3;VIP=Inst[ZZZw];end end elseif ((Enum<=44) or (4782<= 
            1199)) then local ZZZf=2;local A=Inst[ZZZf];do local ZZZg=3;return Unpack(Stk,A,A + Inst[ZZZg] );end else local ZZZy=45;if ((Enum==ZZZy) or (4864<1902))  
              then local ZZZx=4;local ZZZk=3;local ZZZv=1;local ZZZb=1;local ZZZp=2;local A=Inst[ZZZp];local Results={Stk[A](Unpack(Stk,A + ZZZv ,Inst[ZZZk]))};local 
                 Edx=0;for Idx=A,Inst[ZZZx] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end else local ZZZj=2;Stk[Inst[ZZZj]]=Stk[Inst[3]][Inst[4]];end end elseif ((4839>= 
                  3700) and (Enum<=48)) then local ZZZq=47;if (Enum==ZZZq) then Stk[Inst[2]]=Inst[3]~=0 ;else local A=Inst[2];do local ZZZE=3;local ZZZz=1;return   
                      Stk[A](Unpack(Stk,A + ZZZz ,Inst[ZZZE]));end end else local ZZZT=49;if ((Enum<=ZZZT) or (1075>1918)) then local ZZZA=2;local A=Inst[ZZZA];do  
                                  local ZZZO=1;return Stk[A],Stk[A + ZZZO ];end elseif ((396<=3804) and (Enum==50)) then local ZZZI=2;Upvalues[Inst[3]]=Stk[Inst[   
                                      ZZZI]];else local ZZZH=1;local ZZZS=1;local ZZZN=2;local A=Inst[ZZZN];local Results={Stk[A](Unpack(Stk,A + ZZZH ,Inst[3]))};  
                                      local Edx=0;for Idx=A,Inst[4] do local ZZZR=1;Edx=Edx + ZZZR          ;Stk[Idx]=Results[Edx];end end end else local ZZZD=56;  
                                      if (Enum<=ZZZD) then local ZZZL=53;if (Enum<=ZZZL) then if (          Enum==52) then do return;end else local ZZZU=2;local  
                                      ZZZC=3;Upvalues[Inst[ZZZC]]=Stk[Inst[ZZZU]];end else local            ZZZM=54;if ((Enum<=ZZZM) or (4169==2187)) then Stk[   
                                      Inst[2]]={};else local ZZZW=55;if ((1406==1406) and (Enum==           ZZZW)) then local ZZZF=2;Stk[Inst[ZZZF]][Inst[3]]=Stk 
                                      [Inst[4]];elseif  not Stk[Inst[2]] then VIP=VIP + 1 ;else VIP           =Inst[3];end end end elseif ((1531<4271) and (Enum  
                                      <=59)) then if (Enum<=57) then local ZZZG=4;local A=Inst[2];            local Results={Stk[A](Stk[A + 1 ])};local Edx=0;for 
                                       Idx=A,Inst[ZZZG] do local ZZZY=1;Edx=Edx + ZZZY ;Stk[Idx]=             Results[Edx];end elseif (Enum==58) then local     
                                        ZZZX=4;local ZZZB="__newindex";local NewProto=Proto[Inst[3]           ];local NewUvals;local Indexes={};NewUvals=       
                                        Setmetatable({},{__index=function(_,Key) local ZZZP=1;local              Val=Indexes[Key];return Val[ZZZP][Val[2]];end, 
                                        [ZZZB]=function(_,Key,Value) local ZZZK=2;local ZZZV=1;                 local Val=Indexes[Key];Val[ZZZV][Val[ZZZK]]=  
                                        Value;end});for Idx=1,Inst[ZZZX] do local ZZZZa=1;VIP=VIP                + 1 ;local Mvm=Instr[VIP];if (Mvm[1]==4)     
                                        then local ZZZQ=3;local ZZZJ=2;Indexes[Idx-1 ]={Stk,Mvm[                  ZZZQ]};else local ZZZZt=2;local ZZZZe=1;  
                                        local ZZZZ=1;Indexes[Idx-ZZZZ ]={Upvalues,Mvm[3]};end                     Lupvals[ #Lupvals + ZZZZa ]=Indexes;end   
                                          Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);else local                       ZZZZi=4;local ZZZZo=2;local A=Inst[   
                                          ZZZZo];local Results={Stk[A](Unpack(Stk,A + 1 ,Top))}                       ;local Edx=0;for Idx=A,Inst[    
                                            ZZZZi] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end                            end else local ZZZZn=60;  
                                            if ((635==635) and (Enum<=ZZZZn)) then do local                                   ZZZZs=2;    
                                              return Stk[Inst[ZZZZs]];end elseif (Enum>61)  
                                                then if ((3373<=3556) and (Stk[Inst[2]]== 
                                                    Stk[Inst[4]])) then VIP=VIP + 1 ;   
                                                          else VIP=Inst[3];end    


else local ZZZZr=4;local ZZZZh=3;local A=Inst[2];local B=Stk[Inst[ZZZZh]];Stk[A + 1 ]=B;Stk[A]=B[Inst[ZZZZr]];end end end elseif ((Enum<=73) or (3291<3280)) then if ((4386>=873) and (Enum<=67)) then local ZZZZd=64;if ((921<=1102) and (Enum<=ZZZZd)) then local ZZZZl=63;if ((4706>=963) and (Enum>ZZZZl)) then local ZZZZc=2;Stk[Inst[ZZZZc]]=Upvalues[Inst[3]];else local ZZZZm=3;local ZZZZu=2;Stk[Inst[ZZZZu]]= not Stk[Inst[ZZZZm]];end elseif ((Enum<=65) or (960<=876)) then local A=Inst[2];do return Unpack(Stk,A,Top);end elseif ((Enum>66) or (2066==932)) then Stk[Inst[2]]={};else for Idx=Inst[2],Inst[3] do local ZZZZw=nil;Stk[Idx]=ZZZZw;end end else local ZZZZf=70;if ((4825<4843) and (Enum<=ZZZZf)) then if ((Enum<=68) or (3877>=4537)) then local A=Inst[2];do local ZZZZy=3;local ZZZZg=1;return Stk[A](Unpack(Stk,A + ZZZZg ,Inst[ZZZZy]));end else local ZZZZp=69;if ((Enum==ZZZZp) or (4315<1726)) then local ZZZZv=4;local ZZZZb=2;if ((Stk[Inst[ZZZZb]]==Stk[Inst[ZZZZv]]) or (3679<625)) then local ZZZZk=1;VIP=VIP + ZZZZk ;else local ZZZZx=3;VIP=Inst[ZZZZx];end else local ZZZZq=3;local ZZZZj=1;local A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + ZZZZj ,Inst[ZZZZq]));end end else local ZZZZz=71;if (Enum<=ZZZZz) then local ZZZZT=3;local ZZZZE=1;local A=Inst[2];Stk[A](Unpack(Stk,A + ZZZZE ,Inst[ZZZZT]));elseif (Enum==72) then local ZZZZI=1;local ZZZZO=1;local ZZZZA=2;local A=Inst[ZZZZA];local Results,Limit=_R(Stk[A](Stk[A + ZZZZO ]));Top=(Limit + A) -ZZZZI ;local Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end else local ZZZZN=2;Stk[Inst[ZZZZN]]=Inst[3];end end end elseif ((Enum<=78) or (4625<632)) then local ZZZZS=75;if ((Enum<=ZZZZS) or (83>1780)) then local ZZZZH=74;if (Enum==ZZZZH) then do return Stk[Inst[2]];end else local ZZZZR=2;Stk[Inst[ZZZZR]]=Env[Inst[3]];end else local ZZZZD=76;if (Enum<=ZZZZD) then local ZZZZL=2;if ((546<=1077) and (Stk[Inst[ZZZZL]]==Inst[4])) then local ZZZZC=1;VIP=VIP + ZZZZC ;else VIP=Inst[3];end elseif ((Enum==77) or (996>4301)) then local ZZZZM=4;local ZZZZU=3;Stk[Inst[2]]=Stk[Inst[ZZZZU]] + Stk[Inst[ZZZZM]] ;else local ZZZZW=2;Stk[Inst[ZZZZW]]=Wrap(Proto[Inst[3]],nil,Env);end end elseif ((4070>687) and (Enum<=81)) then local ZZZZF=79;if ((Enum<=ZZZZF) or (656>=3330)) then local ZZZZG=1;local A=Inst[2];Stk[A](Stk[A + ZZZZG ]);else local ZZZZY=80;if ((Enum>ZZZZY) or (2492<=335)) then local ZZZZP=1;local A=Inst[2];Stk[A]=Stk[A](Stk[A + ZZZZP ]);else local A=Inst[2];Stk[A](Unpack(Stk,A + 1 ,Top));end end elseif (Enum<=82) then local NewProto=Proto[Inst[3]];local NewUvals;local Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key) local ZZZZB=2;local Val=Indexes[Key];return Val[1][Val[ZZZZB]];end,__newindex=function(_,Key,Value) local ZZZZV=2;local Val=Indexes[Key];Val[1][Val[ZZZZV]]=Value;end});for Idx=1,Inst[4] do local ZZZZZe=1;local ZZZZK=1;VIP=VIP + ZZZZK ;local Mvm=Instr[VIP];if (Mvm[1]==4) then local ZZZZX=1;Indexes[Idx-1 ]={Stk,Mvm[3]};else local ZZZZZ=2;local ZZZZQ=1;local ZZZZJ=1;Indexes[Idx-ZZZZJ ]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + ZZZZZe ]=Indexes;end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);else local ZZZZZt=83;if ((4322>=2562) and (Enum==ZZZZZt)) then local ZZZZZa=2;Stk[Inst[ZZZZZa]]=Env[Inst[3]];else Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];end end end VIP=VIP + ZZZZZo ;end end;end return Wrap(Deserialize(),{},vmenv)(...);end return VMCall("LOL!",GetFEnv(),...);
